<?php

/**
 * Register a content_types for ctools
 */
function decathlon_dpi_ctools_plugin_directory($owner, $plugin_type) {
  // we'll be nice and limit scandir() calls
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/content_types';
  }
}

function decathlon_dpi_form($form, &$form_state) {

  module_load_include('inc', 'decathlon');
  $event = decathlon_get_event();

  // Multipliers
  $form['multipliers'] = array(
    '#prefix' => '<div class="dpi-form-table dpi-form-multipliers">',
    '#suffix' => '</div>',
    '#tree' => TRUE,
    '#title' => decathlon_get_term_name($event) . ' Point Multipliers',
    '#theme' => 'decathlon_dpi_weights'
  );

  $point_multipliers = decathlon_dpi_get_multipliers('point');
  foreach ($point_multipliers as $tid => $row) {
    $form['multipliers'][$tid] = array(
      '#type' => 'textfield',
      '#title' => $row['name'],
      '#title_display' => 'invisible',
      '#size' => 5,
      '#default_value' => $row['value'],
    );
  }

  // Participaton weights
  $form['weights'] = array(
    '#prefix' => '<div class="dpi-form-table dpi-form-chart">',
    '#suffix' => '</div>',
    '#tree' => TRUE,
    '#title' =>  decathlon_get_term_name($event) . ' Game Weights',
    '#theme' => 'decathlon_dpi_weights'
  );

  $game_multipliers = decathlon_dpi_get_multipliers('game');
  foreach ($game_multipliers as $tid => $row) {
    $form['weights'][$tid] = array(
      '#type' => 'textfield',
      '#title' => $row['name'],
      '#title_display' => 'invisible',
      '#default_value' => $row['value'],
      '#size' => 4,
    );
  }

  // DPI Chart
  $form['chart'] = array(
    '#prefix' => '<div class="dpi-form-table dpi-form-chart">',
    '#suffix' => '</div>',
    '#tree' => TRUE,
    '#title' => decathlon_get_term_name($event) . ' Ranking Weights',
    '#theme' => 'decathlon_dpi_weights'
  );

  $ranking_multipliers = decathlon_dpi_get_multipliers('ranking');
  foreach ($ranking_multipliers as $tid => $row) {
    $form['chart'][$tid] = array(
      '#type' => 'textfield',
      '#title' => $row['name'],
      '#title_display' => 'invisible',
      '#default_value' => $row['value'],
      '#size' => 4,
    );
  }

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Update',
  );

  return $form;
}

function decathlon_dpi_form_submit($form, &$form_state) {

  // Multipliers
  foreach (element_children($form['multipliers']) as $tid) {
    if ($form['multipliers'][$tid]['#default_value'] != $form_state['values']['multipliers'][$tid]) {
      decathlon_dpi_set_multiplier($tid, $form_state['values']['multipliers'][$tid]);
    }
  }

  // Participation weights
  foreach (element_children($form['weights']) as $tid) {
    if ($form['weights'][$tid]['#default_value'] != $form_state['values']['weights'][$tid]) {
      decathlon_dpi_set_multiplier($tid, $form_state['values']['weights'][$tid]);
    }
  }

  // Ranking weights
  foreach (element_children($form['chart']) as $tid) {
    if ($form['chart'][$tid]['#default_value'] != $form_state['values']['chart'][$tid]) {
      decathlon_dpi_set_multiplier($tid, $form_state['values']['chart'][$tid]);
    }
  }

  drupal_set_message("Changes saved.");
}

function decathlon_dpi_theme($existing, $type, $theme, $path) {
  return array(
    'decathlon_dpi_multipliers' => array(
      'render element' => 'element'
    ),
    'decathlon_dpi_weights' => array(
      'render element' => 'element'
    ),
    'decathlon_dpi_tiers' => array(
      'render element' => 'element'
    ),
  );
}

function theme_decathlon_dpi_weights($vars) {

  $element = $vars['element'];

  $header = array();
  $row = array();
  foreach (element_children($element) as $key) {
    $header[] = $element[$key]['#title'];
    $row[] = array('data' => drupal_render($element[$key]));
  }

  return theme('table', array(
      'header' => $header,
      'rows' => array($row),
      'caption' => $element['#title'],
      'sticky' => FALSE,
    ));
}

function decathlon_dpi_get_multiplier($option) {
  $map = _decathlon_dpi_get_multiplier_values();
  return $map[$option];
}

function _decathlon_dpi_get_multiplier_values() {
  $my_map = &drupal_static(__FUNCTION__);
  if (!isset($my_map)) {
    $list = decathlon_dpi_get_multipliers('point');
    foreach ($list as $row) {
      $my_map[$row['name']] = $row['value'];
    }
  }

  return $my_map;
}

function decathlon_dpi_get_participation_weighting($tid) {

  $my_map = &drupal_static(__FUNCTION__);

  if (!isset($my_map)) {
    $my_map = decathlon_dpi_get_multipliers('game');
  }

  return $my_map[$tid]['value'];
}

function decathlon_dpi_get_ranking($rank) {

  $my_map = &drupal_static(__FUNCTION__);

  if (!isset($my_map)) {
    $list = decathlon_dpi_get_multipliers('ranking');
    $my_map = array_merge($list);
  }

  if ($rank >= count($my_map)) { // Rankings above n all have the same value
    $index = count($my_map) - 1;
  } else {
    $index = $rank - 1;
  }

  return $my_map[$index]['value'];
}

function decathlon_dpi_get_multipliers($group) {

  $list = array();

  // initialize list with all types
  switch($group) {
    case 'point':
      $terms = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('dpi_multiplier')->vid);
      break;
    case 'game':
      $terms = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('games')->vid);
      break;
    case 'ranking':
      $terms = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('ranking')->vid);
      break;
  }

  foreach ($terms as $row) {
    $term = taxonomy_term_load($row->tid);
    $list[$term->tid] = array(
      'name' => $term->name,
      'value' => 0,
    );
  }

  decathlon_dpi_add_multiplier_values($list);

  return $list;
}

function decathlon_dpi_add_multiplier_values(&$list) {

  // add values to list
  $event = decathlon_get_event();
  $result = db_query("SELECT tid, multiplier FROM {decathlon_dpi} WHERE event = :event", array(':event' => $event));
  $values = array();
  if ($result) {
    while ($row = $result->fetchAssoc()) {
      if (isset($list[$row['tid']])) {
        $list[$row['tid']]['value'] = $row['multiplier'];
      }
    }
  }
}

function decathlon_dpi_set_multiplier($tid, $value) {

  db_merge('decathlon_dpi')
    ->key(array(
        'event' => decathlon_get_event(),
        'tid' => $tid,
      ))
    ->fields(array(
        'multiplier' => $value,
      ))
    ->execute();
}

